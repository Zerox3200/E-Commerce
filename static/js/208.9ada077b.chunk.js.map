{"version":3,"file":"static/js/208.9ada077b.chunk.js","mappings":"oKAAO,MAAMA,UAA0BC,OAYvC,SAASC,EAAgBC,GACrB,IAAIC,EAASD,EAAIE,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KAClD,OAAQD,EAAOE,OAAS,GACpB,KAAK,EACD,MACJ,KAAK,EACDF,GAAU,KACV,MACJ,KAAK,EACDA,GAAU,IACV,MACJ,QACI,MAAM,IAAIH,MAAM,8CAExB,IACI,OAxBR,SAA0BE,GACtB,OAAOI,mBAAmBC,KAAKL,GAAKE,QAAQ,QAAQ,CAACI,EAAGC,KACpD,IAAIC,EAAOD,EAAEE,WAAW,GAAGC,SAAS,IAAIC,cAIxC,OAHIH,EAAKL,OAAS,IACdK,EAAO,IAAMA,GAEV,IAAMA,CAAI,IAEzB,CAgBeI,CAAiBX,EAC5B,CACA,MAAOY,GACH,OAAOR,KAAKJ,EAChB,CACJ,CA9BAJ,EAAkBiB,UAAUC,KAAO,oB,kCCOpB,SAASC,IACpB,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,IACzC,UAAEC,IAAcC,EAAAA,EAAAA,YAAWC,EAAAA,IAC1BC,EAAQC,IAAaL,EAAAA,EAAAA,aAOtB,KAAEM,EAAI,UAAEC,EAAS,QAAEC,IAAYC,EAAAA,EAAAA,UAAS,UALzBC,eACJC,EAAAA,EAAMC,IAAI,sDAADC,OAAuDT,IACxEU,OAAM,IAAMf,GAAe,MAGkC,CAClEgB,oBAAoB,EACpBC,sBAAsB,EACtBC,QAASnB,IAeb,OAZAoB,EAAAA,EAAAA,YAAU,KACN,GAAIjB,EAAW,CACX,MAAMkB,EDMX,SAAmBC,EAAOC,GAC7B,GAAqB,kBAAVD,EACP,MAAM,IAAI1C,EAAkB,6CAEhC2C,IAAYA,EAAU,CAAC,GACvB,MAAMC,GAAyB,IAAnBD,EAAQE,OAAkB,EAAI,EACpCC,EAAOJ,EAAMK,MAAM,KAAKH,GAC9B,GAAoB,kBAATE,EACP,MAAM,IAAI9C,EAAkB,0CAADmC,OAA2CS,EAAM,IAEhF,IAAII,EACJ,IACIA,EAAU9C,EAAgB4C,EAC9B,CACA,MAAOG,GACH,MAAM,IAAIjD,EAAkB,qDAADmC,OAAsDS,EAAM,EAAC,MAAAT,OAAKc,EAAEC,QAAO,KAC1G,CACA,IACI,OAAOC,KAAKC,MAAMJ,EACtB,CACA,MAAOC,GACH,MAAM,IAAIjD,EAAkB,mDAADmC,OAAoDS,EAAM,EAAC,MAAAT,OAAKc,EAAEC,QAAO,KACxG,CACJ,CC7BiCG,CAAU9B,GAC/BI,EAAUc,EAAaa,IACvBjC,GAAe,EACnB,MACIM,EAAU,MACVN,GAAe,EACnB,GACD,CAACE,KAGGgC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAEHF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,mBAAkBD,SAC5B5B,GAAY0B,EAAAA,EAAAA,KAACI,EAAAA,EAAO,IACK,KAAlB,OAAJ/B,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAAKtB,SACPwB,GADsByB,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,UAACF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,6BAEzC,OAAJ7B,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAAKgC,KAAI,CAACC,EAAUC,KAAUC,EAAAA,EAAAA,MAAA,OAAKL,UAAU,2BAA0BD,SAAA,EACzEM,EAAAA,EAAAA,MAAA,MAAIL,UAAU,aAAYD,SAAA,CAAC,iBAAeI,EAASG,gBAAgB,SAClEH,EAASI,UAAUL,KAAI,CAACM,EAAOJ,KAAUP,EAAAA,EAAAA,KAAA,OAAKG,UAAU,yBAAwBD,UAC7EM,EAAAA,EAAAA,MAAA,OAAKL,UAAU,UAASD,SAAA,EACpBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUD,UACrBF,EAAAA,EAAAA,KAAA,OAAKY,IAAKD,EAAME,QAAQC,WAAYX,UAAU,0BAA0BY,IAAI,WAEhFf,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUD,UACrBM,EAAAA,EAAAA,MAAA,OAAKL,UAAU,4DAA2DD,SAAA,EACtEF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,gBAAeD,SAAES,EAAME,QAAQG,SAC7CR,EAAAA,EAAAA,MAAA,KAAGL,UAAU,kBAAiBD,SAAA,CAAC,UAAQS,EAAMM,MAAM,kBARoBV,OAFRA,QAqB3G,C","sources":["../node_modules/jwt-decode/build/esm/index.js","Pages/Orders/Orders.jsx"],"sourcesContent":["export class InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nexport function jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport './Orders.scss';\r\nimport { useQuery } from 'react-query';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { UserContext } from '../../Context/UserContext';\r\nimport Loading from '../../Components/Loading/Loading';\r\n\r\nexport default function Orders() {\r\n    const [EnableError, setEnableError] = useState(false);\r\n    const { UserToken } = useContext(UserContext)\r\n    const [UserId, setUserId] = useState();\r\n\r\n    const GetAllOrders = async () => {\r\n        return await axios.get(`https://ecommerce.routemisr.com/api/v1/orders/user/${UserId}`)\r\n            .catch(() => setEnableError(false))\r\n    }\r\n\r\n    const { data, isLoading, isError } = useQuery('Orders', GetAllOrders, {\r\n        refetchOnReconnect: true,\r\n        refetchOnWindowFocus: true,\r\n        enabled: EnableError\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (UserToken) {\r\n            const decodedToken = jwtDecode(UserToken);\r\n            setUserId(decodedToken.id);\r\n            setEnableError(true);\r\n        } else {\r\n            setUserId(null);\r\n            setEnableError(false);\r\n        }\r\n    }, [UserToken]);\r\n\r\n\r\n    return <>\r\n\r\n        <div className=\"Orders container\">\r\n            {isLoading ? <Loading /> :\r\n                data?.data.length === 0 ? <div className='Empty'><h1>Your WishList is empty</h1></div> :\r\n                    isError ? <div className='Empty'><h1>Your WishList is empty</h1></div> :\r\n                        data?.data.map((Shipping, index) => <div className=\"Order mt-2 row gap-2 p-3\" key={index}>\r\n                            <h1 className='Main_Title'>Total Price : {Shipping.totalOrderPrice} EG</h1>\r\n                            {Shipping.cartItems.map((Order, index) => <div className=\"card col-xl-5 col-md-8\" key={index}>\r\n                                <div className=\"row g-0\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <img src={Order.product.imageCover} className=\"img-fluid rounded-start\" alt=\"...\" />\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <div className=\"card-body d-flex flex-column justify-content-center h-100\">\r\n                                            <h1 className=\"card-title h5\">{Order.product.title}</h1>\r\n                                            <p className=\"card-text Price\">Price: {Order.price} EG\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>)}\r\n\r\n                        </div>\r\n                        )}\r\n        </div>\r\n    </>\r\n}\r\n"],"names":["InvalidTokenError","Error","base64UrlDecode","str","output","replace","length","decodeURIComponent","atob","m","p","code","charCodeAt","toString","toUpperCase","b64DecodeUnicode","err","prototype","name","Orders","EnableError","setEnableError","useState","UserToken","useContext","UserContext","UserId","setUserId","data","isLoading","isError","useQuery","async","axios","get","concat","catch","refetchOnReconnect","refetchOnWindowFocus","enabled","useEffect","decodedToken","token","options","pos","header","part","split","decoded","e","message","JSON","parse","jwtDecode","id","_jsx","_Fragment","children","className","Loading","map","Shipping","index","_jsxs","totalOrderPrice","cartItems","Order","src","product","imageCover","alt","title","price"],"sourceRoot":""}