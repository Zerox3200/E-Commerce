{"version":3,"file":"static/js/982.a743efae.chunk.js","mappings":"6MASe,SAASA,IACpB,IAAI,OAAEC,IAAWC,EAAAA,EAAAA,MACjB,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,GACvC,IAAI,SAAEC,IAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAE9B,MAAMC,EAAaC,EAAAA,GAAW,CAC1BC,QAASD,EAAAA,KAAaE,IAAI,EAAG,gBAAgBC,IAAI,GAAI,iBAAiBC,SAAS,uBAC/EC,MAAOL,EAAAA,KAAaM,QAAQ,oBAAqB,8BAA8BF,SAAS,qBACxFG,KAAMP,EAAAA,KAAaE,IAAI,EAAG,gBAAgBC,IAAI,GAAI,iBAAiBC,SAAS,sBAU1EI,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXT,QAAS,GACTI,MAAO,GACPE,KAAM,IACPI,iBAAkBZ,EACrBa,SAbcC,UACdnB,GAAW,GACX,IAAI,KAAEoB,SAAelB,EAASL,EAAQwB,GACtCrB,GAAW,GACXsB,OAAOC,SAASC,KAAOJ,EAAKK,QAAQC,GAAG,IAY3C,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+DAA8DC,UACzEC,EAAAA,EAAAA,MAAA,QAAMZ,SAAUJ,EAAOiB,aAAcH,UAAU,QAAOC,SAAA,EAClDF,EAAAA,EAAAA,KAAA,SAAOK,QAAQ,UAASH,SAAC,cACzBF,EAAAA,EAAAA,KAAA,SAAOM,KAAK,OAAOC,KAAK,UAAUC,GAAG,UAAUP,UAAU,oBAAoBQ,SAAUtB,EAAOuB,aAC1FC,OAAQxB,EAAOyB,aAClBzB,EAAO0B,OAAOjC,SAAWO,EAAO2B,QAAQlC,SACrCoB,EAAAA,EAAAA,KAAA,QAAMC,UAAU,qBAAoBC,SAAEf,EAAO0B,OAAOjC,UAAkB,MAE1EoB,EAAAA,EAAAA,KAAA,SAAOK,QAAQ,QAAOH,SAAC,YACvBF,EAAAA,EAAAA,KAAA,SAAOM,KAAK,MAAMC,KAAK,QAAQC,GAAG,QAAQP,UAAU,oBAAoBQ,SAAUtB,EAAOuB,aACrFC,OAAQxB,EAAOyB,aAClBzB,EAAO0B,OAAO7B,OAASG,EAAO2B,QAAQ9B,OACnCgB,EAAAA,EAAAA,KAAA,QAAMC,UAAU,qBAAoBC,SAAEf,EAAO0B,OAAO7B,QAAgB,MAExEgB,EAAAA,EAAAA,KAAA,SAAOK,QAAQ,OAAMH,SAAC,WACtBF,EAAAA,EAAAA,KAAA,SAAOM,KAAK,OAAOC,KAAK,OAAOC,GAAG,OAAOP,UAAU,oBAAoBQ,SAAUtB,EAAOuB,aACpFC,OAAQxB,EAAOyB,aAClBzB,EAAO0B,OAAO3B,MAAQC,EAAO2B,QAAQ5B,MAClCc,EAAAA,EAAAA,KAAA,QAAMC,UAAU,qBAAoBC,SAAEf,EAAO0B,OAAO3B,OAAe,KAEtEd,GAAU4B,EAAAA,EAAAA,KAAA,UAAQM,KAAK,SAASL,UAAU,MAAKC,UAC5CF,EAAAA,EAAAA,KAACe,EAAAA,IAAS,CAACC,KAAK,UAAUf,UAAU,eAC5BD,EAAAA,EAAAA,KAAA,UACRiB,WAAY9B,EAAO+B,OAAS/B,EAAOgC,SACnCb,KAAK,SACLL,UAAU,MAAKC,SAAC,mBAMpC,C","sources":["Pages/ShippingAddress/Shipping.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport './Shipping.scss';\r\nimport * as Yup from 'yup';\r\nimport { useContext, useState } from 'react';\r\nimport { WishListContext } from '../../Context/WishListContext';\r\nimport { FaSpinner } from 'react-icons/fa';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nexport default function Shipping() {\r\n    let { CartId } = useParams();\r\n    const [Loading, setLoading] = useState(false);\r\n    let { CheckOut } = useContext(WishListContext);\r\n\r\n    const Validation = Yup.object({\r\n        details: Yup.string().min(5, 'Min Length 5').max(15, 'Max Length 15').required('Details is required'),\r\n        phone: Yup.string().matches(/^01[0125][0-9]{8}/, \"Add Egyption number please\").required(\"Phone is required\"),\r\n        city: Yup.string().min(3, 'Min Length 3').max(15, 'Max Length 15').required('City is required'),\r\n    })\r\n\r\n    const MakeOrder = async (values) => {\r\n        setLoading(true)\r\n        let { data } = await CheckOut(CartId, values);\r\n        setLoading(false);\r\n        window.location.href = data.session.url;\r\n    }\r\n\r\n    const Formik = useFormik({\r\n        initialValues: {\r\n            details: \"\",\r\n            phone: \"\",\r\n            city: \"\"\r\n        }, validationSchema: Validation,\r\n        onSubmit: MakeOrder\r\n    });\r\n\r\n    return (\r\n        <div className='Shipping container mt-4 d-flex flex-column align-items-start'>\r\n            <form onSubmit={Formik.handleSubmit} className='w-100'>\r\n                <label htmlFor=\"details\">Details:</label>\r\n                <input type=\"text\" name=\"details\" id=\"details\" className='form-control mb-4' onChange={Formik.handleChange}\r\n                    onBlur={Formik.handleBlur} />\r\n                {Formik.errors.details && Formik.touched.details ?\r\n                    <span className='alert alert-danger'>{Formik.errors.details}</span> : null}\r\n\r\n                <label htmlFor=\"phone\">Phone:</label>\r\n                <input type=\"tel\" name=\"phone\" id=\"phone\" className='form-control mb-4' onChange={Formik.handleChange}\r\n                    onBlur={Formik.handleBlur} />\r\n                {Formik.errors.phone && Formik.touched.phone ?\r\n                    <span className='alert alert-danger'>{Formik.errors.phone}</span> : null}\r\n\r\n                <label htmlFor=\"city\">City:</label>\r\n                <input type=\"text\" name=\"city\" id=\"city\" className='form-control mb-4' onChange={Formik.handleChange}\r\n                    onBlur={Formik.handleBlur} />\r\n                {Formik.errors.city && Formik.touched.city ?\r\n                    <span className='alert alert-danger'>{Formik.errors.city}</span> : null}\r\n\r\n                {Loading ? <button type='button' className='btn'>\r\n                    <FaSpinner icon=\"spinner\" className=\"spinner\" />\r\n                </button> : <button\r\n                    disabled={!(Formik.dirty && Formik.isValid)}\r\n                    type='submit'\r\n                    className='btn'>\r\n                    Make Order\r\n                </button>}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n"],"names":["Shipping","CartId","useParams","Loading","setLoading","useState","CheckOut","useContext","WishListContext","Validation","Yup","details","min","max","required","phone","matches","city","Formik","useFormik","initialValues","validationSchema","onSubmit","async","data","values","window","location","href","session","url","_jsx","className","children","_jsxs","handleSubmit","htmlFor","type","name","id","onChange","handleChange","onBlur","handleBlur","errors","touched","FaSpinner","icon","disabled","dirty","isValid"],"sourceRoot":""}